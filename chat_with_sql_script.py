### Importing all the necessary libraries
import os
from langchain.agents import *
from langchain.llms import openai
from langchain.chat_models import ChatOpenAI
from langchain.sql_database import SQLDatabase
from langchain.agents.agent_toolkits import SQLDatabaseToolkit
from langchain.agents import AgentExecutor

os.environ["OPENAI_API_KEY"] = "xxxxxxxxxxxxx"

class ChatWithSQL:
    """ChatWithSQL class is used for chat and query user question with the sql database
    """

    def __init__(self, db_user, db_password, db_host, db_name):
        """This is an constructor method of the chatWIthSQL class
        """
        self.db_user = db_user
        self.db_password = db_password
        self.db_host = db_host
        self.db_name = db_name

    def message(self, query):
        """message method will take the query from the user and process the result and return the response
        
        Args:
            query(String): This is the questions of the user
        Return:
            response(String): This is the response generated by llms
        """

        #Intitalizing the llm
        llm = ChatOpenAI(model_name = "gpt-3.5-turbo")

        #Connecting with Database
        db = SQLDatabase.from_uri(f"mysql+pymysql://{self.db_user}:{self.db_password}@{self.db_host}/{self.db_name}")

        #Intitalizing the toolkit
        toolkit = SQLDatabaseToolkit(db=db, llm=llm)

        #Creating the agent executor
        agent_executor = create_sql_agent(llm=llm, toolkit=toolkit, verbos=True)

        response = agent_executor.run(query)

        return response

# obj = ChatWithSQL("root", "12345", "localhost", "ahi_database")
# print(obj.message("How many tables do we have?"))
